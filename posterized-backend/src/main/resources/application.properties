# Port na kojem ce se vrtiti api, koristi Render
server.port=${PORT:8080}

# Korijenska putanja ("prefiks") za sve zahtjeve na backend - preporuca se postaviti ovo zbog proxy konfiguracije
# Ako je npr. u controlleru navedena putanja /test, moci ce joj se pristupiti pomocu putanje /api/test
server.servlet.context-path=/api

spring.liquibase.enabled=false

# Konfiguracija baze podataka
# Izlaganje environment varijabli je nuzno da bismo mogli postaviti adresu, korisnicko ime i lozinku baze podataka na produkciji
# Stavljanje credentialsa produkcijske baze podataka direktno u kod je jako losa praksa!

server.tomcat.accesslog.enabled=true

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

spring.datasource.password=Pv6QqTeuMrYz3RtXcr649YW3arMshs8D
spring.datasource.username=posterized_db_user
spring.datasource.url=jdbc:postgresql://dpg-cl9qp9e2eqrc73920vtg-a.frankfurt-postgres.render.com/posterized_db
spring.datasource.driverClassName=org.postgresql.Driver

server.error.include-message = always
spring.thymeleaf.check-template-location=false
hr.fer.progi.posterized.admin.password: $2a$10$7dR1nXFoZCc1I9UMEWxWDO4AIC7CRh66h5O90YlcNk7wo0GqaHoI6

#spring.profiles.active=basic-security
